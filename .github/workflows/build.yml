name: Android Build (Unsigned)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # ------ 代码检出 ------
    - uses: actions/checkout@v4

    # ------ 环境配置 ------
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        build-tools-version: "34.0.0"
        platform-version: "android-34"

    # ------ 构建缓存 ------
    - name: Cache Gradle
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}

    # ------ 预处理 ------
    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Accept Android licenses
      run: yes | sdkmanager --licenses

    # ------ 并行构建任务 ------
    - name: Build APKs (Debug & Release)
      run: |
        ./gradlew assembleDebug assembleRelease \
          --build-cache \
          --parallel \
          --warning-mode all

    # ------ 产物收集 ------
    - name: Collect APKs
      run: |
        mkdir -p apk_output
        # Debug APKs
        find . -path "*/build/outputs/apk/debug/*.apk" -exec cp {} apk_output \;
        # Release APKs (unsigned)
        find . -path "*/build/outputs/apk/release/*-unsigned.apk" -exec cp {} apk_output \;
        # Fallback for release APKs if unsigned pattern doesn't match
        find . -path "*/build/outputs/apk/release/*.apk" -not -name "*-unaligned.apk" -exec cp {} apk_output \;

    # ------ 产物上传 ------
    - name: Upload APKs
      uses: actions/upload-artifact@v4
      with:
        name: android-apks
        path: apk_output/*.apk
