name: Auto Build Debug APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # ------ 代码检出 ------
    - name: Checkout code
      uses: actions/checkout@v4

    # ------ 环境配置 ------
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Install Android SDK
      uses: android-actions/setup-android@v3
      with:  # 确保这里用两个空格缩进
        build-tools-version: "34.0.0"
        platform-version: "android-34"

    # ------ 构建优化 ------
    - name: Cache Gradle
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}

    # ------ 必要预处理 ------
    - name: Fix Gradle Permissions
      run: chmod +x gradlew  # 单行命令无需管道符

    - name: Accept SDK Licenses
      run: yes | sdkmanager --licenses

    # ------ 构建任务 ------
    - name: Build Debug APK
      run: ./gradlew assembleDebug --parallel

    # ------ 正确缩进的多行命令示例 ------
    - name: Collect APKs
      run: |  # ✅ 正确缩进（前面两个空格）
        mkdir -p apk_output
        find . -path "*/build/outputs/apk/debug/*.apk" -exec cp {} apk_output \;

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: apk_output/*.apk
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}

    # ------ 必要预处理 ------
    - name: Fix Gradle Permissions
      run: chmod +x gradlew

    - name: Accept SDK Licenses
      run: yes | sdkmanager --licenses

    # ------ 构建任务 ------
    - name: Build Debug APK
      run: ./gradlew assembleDebug --parallel

    # ------ 产物处理 ------
    - name: Collect APKs
      run: |
        mkdir -p apk_output
        find . -path "*/build/outputs/apk/debug/*.apk" -exec cp {} apk_output \;

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: apk_output/*.apk

    - name: Upload Release APK
      if: ${{ secrets.KEYSTORE_FILE }}
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: app/build/outputs/apk/release/app-release.apk
